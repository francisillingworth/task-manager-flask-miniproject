{"changed":true,"filter":false,"title":"app.py","tooltip":"/app.py","value":"import os\nfrom flask import Flask, render_template, redirect, request, url_for, request\nfrom flask_pymongo import PyMongo\nfrom bson.objectid import ObjectId\n\n\napp = Flask(__name__)\napp.config[\"MONGO_DBNAME\"] = 'task_manager'\napp.config[\"MONGO_URI\"] = os.getenv('MONGO_URI', 'mongodb://localhost')\n\nmongo = PyMongo(app)\n\n@app.route('/')\n@app.route('/get_tasks')\ndef get_tasks():\n    return render_template(\"tasks.html\", \n                           tasks=mongo.db.tasks.find())\n\n\n@app.route('/add_task')\ndef add_task():\n    return render_template('addtask.html',\n                           categories=mongo.db.categories.find())\n\n\n@app.route('/insert_task', methods=['POST'])\ndef insert_task():\n    tasks =  mongo.db.tasks\n    tasks.insert_one(request.form.to_dict())\n    return redirect(url_for('get_tasks'))\n\n\n@app.route('/edit_task/<task_id>')\ndef edit_task(task_id):\n    the_task =  mongo.db.tasks.find_one({\"_id\": ObjectId(task_id)})\n    all_categories =  mongo.db.categories.find()\n    return render_template('edittask.html', task=the_task,\n                           categories=all_categories)\n\n\n@app.route('/update_task/<task_id>', methods=[\"POST\"])\ndef update_task(task_id):\n    tasks = mongo.db.tasks\n    tasks.update( {'_id': ObjectId(task_id)},\n    {\n        'task_name':request.form.get('task_name'),\n        'category_name':request.form.get('category_name'),\n        'task_description': request.form.get('task_description'),\n        'due_date': request.form.get('due_date'),\n        'is_urgent':request.form.get('is_urgent')\n    })\n    return redirect(url_for('get_tasks'))\n\n\n@app.route('/delete_task/<task_id>')\ndef delete_task(task_id):\n    mongo.db.tasks.remove({'_id': ObjectId(task_id)})\n    return redirect(url_for('get_tasks'))\n\n\n@app.route('/get_categories')\ndef get_categories():\n    return render_template('categories.html',\n                           categories=mongo.db.categories.find())\n\n\n@app.route('/delete_category/<category_id>')\ndef delete_category(category_id):\n    mongo.db.categories.remove({'_id': ObjectId(category_id)})\n    return redirect(url_for('get_categories'))\n\n\n@app.route('/edit_category/<category_id>')\ndef edit_category(category_id):\n    return render_template('editcategory.html',\n    category=mongo.db.categories.find_one({'_id': ObjectId(category_id)}))\n\n\n@app.route('/update_category/<category_id>', methods=['POST'])\ndef update_category(category_id):\n    mongo.db.categories.update(\n        {'_id': ObjectId(category_id)},\n        {'category_name': request.form.get('category_name')})\n    return redirect(url_for('get_categories'))\n\n\n@app.route('/insert_category', methods=['POST'])\ndef insert_category():\n    category_doc = {'category_name': request.form.get('category_name')}\n    mongo.db.categories.insert_one(category_doc)\n    return redirect(url_for('get_categories'))\n\n\n@app.route('/add_category')\ndef add_category():\n    return render_template('addcategory.html')\n\n\nif __name__ == '__main__':\n    app.run(host=os.environ.get('IP'),\n            port=int(os.environ.get('PORT')),\n            debug=True)","undoManager":{"mark":-9,"position":100,"stack":[[{"start":{"row":22,"column":10},"end":{"row":22,"column":12},"action":"insert","lines":["()"],"id":285}],[{"start":{"row":22,"column":11},"end":{"row":22,"column":13},"action":"insert","lines":["''"],"id":286}],[{"start":{"row":22,"column":12},"end":{"row":22,"column":13},"action":"insert","lines":["i"],"id":287},{"start":{"row":22,"column":13},"end":{"row":22,"column":14},"action":"insert","lines":["n"]},{"start":{"row":22,"column":14},"end":{"row":22,"column":15},"action":"insert","lines":["s"]},{"start":{"row":22,"column":15},"end":{"row":22,"column":16},"action":"insert","lines":["e"]},{"start":{"row":22,"column":16},"end":{"row":22,"column":17},"action":"insert","lines":["r"]},{"start":{"row":22,"column":17},"end":{"row":22,"column":18},"action":"insert","lines":["t"]}],[{"start":{"row":22,"column":18},"end":{"row":22,"column":19},"action":"insert","lines":["_"],"id":288},{"start":{"row":22,"column":19},"end":{"row":22,"column":20},"action":"insert","lines":["t"]},{"start":{"row":22,"column":20},"end":{"row":22,"column":21},"action":"insert","lines":["a"]},{"start":{"row":22,"column":21},"end":{"row":22,"column":22},"action":"insert","lines":["s"]},{"start":{"row":22,"column":22},"end":{"row":22,"column":23},"action":"insert","lines":["k"]}],[{"start":{"row":22,"column":12},"end":{"row":22,"column":13},"action":"insert","lines":["/"],"id":289}],[{"start":{"row":22,"column":25},"end":{"row":22,"column":26},"action":"insert","lines":[","],"id":290}],[{"start":{"row":22,"column":26},"end":{"row":22,"column":27},"action":"insert","lines":[" "],"id":291},{"start":{"row":22,"column":27},"end":{"row":22,"column":28},"action":"insert","lines":["m"]},{"start":{"row":22,"column":28},"end":{"row":22,"column":29},"action":"insert","lines":["e"]},{"start":{"row":22,"column":29},"end":{"row":22,"column":30},"action":"insert","lines":["t"]},{"start":{"row":22,"column":30},"end":{"row":22,"column":31},"action":"insert","lines":["h"]},{"start":{"row":22,"column":31},"end":{"row":22,"column":32},"action":"insert","lines":["o"]}],[{"start":{"row":22,"column":32},"end":{"row":22,"column":33},"action":"insert","lines":["d"],"id":292},{"start":{"row":22,"column":33},"end":{"row":22,"column":34},"action":"insert","lines":["s"]}],[{"start":{"row":22,"column":34},"end":{"row":22,"column":35},"action":"insert","lines":[" "],"id":293},{"start":{"row":22,"column":35},"end":{"row":22,"column":36},"action":"insert","lines":["="]}],[{"start":{"row":22,"column":36},"end":{"row":22,"column":37},"action":"insert","lines":[" "],"id":294}],[{"start":{"row":22,"column":37},"end":{"row":22,"column":39},"action":"insert","lines":["[]"],"id":295}],[{"start":{"row":22,"column":38},"end":{"row":22,"column":40},"action":"insert","lines":["''"],"id":296}],[{"start":{"row":22,"column":39},"end":{"row":22,"column":40},"action":"insert","lines":["P"],"id":297},{"start":{"row":22,"column":40},"end":{"row":22,"column":41},"action":"insert","lines":["O"]},{"start":{"row":22,"column":41},"end":{"row":22,"column":42},"action":"insert","lines":["S"]},{"start":{"row":22,"column":42},"end":{"row":22,"column":43},"action":"insert","lines":["T"]}],[{"start":{"row":23,"column":0},"end":{"row":23,"column":1},"action":"insert","lines":["d"],"id":298},{"start":{"row":23,"column":1},"end":{"row":23,"column":2},"action":"insert","lines":["e"]},{"start":{"row":23,"column":2},"end":{"row":23,"column":3},"action":"insert","lines":["f"]}],[{"start":{"row":23,"column":3},"end":{"row":23,"column":4},"action":"insert","lines":[" "],"id":299},{"start":{"row":23,"column":4},"end":{"row":23,"column":5},"action":"insert","lines":["i"]},{"start":{"row":23,"column":5},"end":{"row":23,"column":6},"action":"insert","lines":["n"]},{"start":{"row":23,"column":6},"end":{"row":23,"column":7},"action":"insert","lines":["s"]}],[{"start":{"row":23,"column":4},"end":{"row":23,"column":7},"action":"remove","lines":["ins"],"id":300},{"start":{"row":23,"column":4},"end":{"row":23,"column":15},"action":"insert","lines":["insert_task"]}],[{"start":{"row":23,"column":15},"end":{"row":23,"column":17},"action":"insert","lines":["()"],"id":301}],[{"start":{"row":23,"column":17},"end":{"row":23,"column":18},"action":"insert","lines":[":"],"id":302}],[{"start":{"row":23,"column":18},"end":{"row":24,"column":0},"action":"insert","lines":["",""],"id":303},{"start":{"row":24,"column":0},"end":{"row":24,"column":4},"action":"insert","lines":["    "]},{"start":{"row":24,"column":4},"end":{"row":25,"column":0},"action":"insert","lines":["",""]},{"start":{"row":25,"column":0},"end":{"row":25,"column":4},"action":"insert","lines":["    "]},{"start":{"row":25,"column":4},"end":{"row":26,"column":0},"action":"insert","lines":["",""]},{"start":{"row":26,"column":0},"end":{"row":26,"column":4},"action":"insert","lines":["    "]},{"start":{"row":26,"column":4},"end":{"row":27,"column":0},"action":"insert","lines":["",""]},{"start":{"row":27,"column":0},"end":{"row":27,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":24,"column":4},"end":{"row":24,"column":5},"action":"insert","lines":["t"],"id":304},{"start":{"row":24,"column":5},"end":{"row":24,"column":6},"action":"insert","lines":["a"]},{"start":{"row":24,"column":6},"end":{"row":24,"column":7},"action":"insert","lines":["s"]},{"start":{"row":24,"column":7},"end":{"row":24,"column":8},"action":"insert","lines":["k"]},{"start":{"row":24,"column":8},"end":{"row":24,"column":9},"action":"insert","lines":["s"]}],[{"start":{"row":24,"column":9},"end":{"row":24,"column":10},"action":"insert","lines":[" "],"id":305},{"start":{"row":24,"column":10},"end":{"row":24,"column":11},"action":"insert","lines":["="]}],[{"start":{"row":24,"column":11},"end":{"row":24,"column":12},"action":"insert","lines":[" "],"id":306}],[{"start":{"row":24,"column":12},"end":{"row":24,"column":13},"action":"insert","lines":["m"],"id":307},{"start":{"row":24,"column":13},"end":{"row":24,"column":14},"action":"insert","lines":["o"]},{"start":{"row":24,"column":14},"end":{"row":24,"column":15},"action":"insert","lines":["n"]},{"start":{"row":24,"column":15},"end":{"row":24,"column":16},"action":"insert","lines":["g"]},{"start":{"row":24,"column":16},"end":{"row":24,"column":17},"action":"insert","lines":["o"]},{"start":{"row":24,"column":17},"end":{"row":24,"column":18},"action":"insert","lines":["."]},{"start":{"row":24,"column":18},"end":{"row":24,"column":19},"action":"insert","lines":["d"]},{"start":{"row":24,"column":19},"end":{"row":24,"column":20},"action":"insert","lines":["b"]}],[{"start":{"row":24,"column":20},"end":{"row":24,"column":21},"action":"insert","lines":["."],"id":308},{"start":{"row":24,"column":21},"end":{"row":24,"column":22},"action":"insert","lines":["t"]},{"start":{"row":24,"column":22},"end":{"row":24,"column":23},"action":"insert","lines":["a"]},{"start":{"row":24,"column":23},"end":{"row":24,"column":24},"action":"insert","lines":["s"]},{"start":{"row":24,"column":24},"end":{"row":24,"column":25},"action":"insert","lines":["k"]},{"start":{"row":24,"column":25},"end":{"row":24,"column":26},"action":"insert","lines":["s"]}],[{"start":{"row":24,"column":26},"end":{"row":25,"column":0},"action":"insert","lines":["",""],"id":309},{"start":{"row":25,"column":0},"end":{"row":25,"column":4},"action":"insert","lines":["    "]},{"start":{"row":25,"column":4},"end":{"row":25,"column":5},"action":"insert","lines":["t"]},{"start":{"row":25,"column":5},"end":{"row":25,"column":6},"action":"insert","lines":["a"]},{"start":{"row":25,"column":6},"end":{"row":25,"column":7},"action":"insert","lines":["s"]},{"start":{"row":25,"column":7},"end":{"row":25,"column":8},"action":"insert","lines":["k"]},{"start":{"row":25,"column":8},"end":{"row":25,"column":9},"action":"insert","lines":["s"]}],[{"start":{"row":25,"column":9},"end":{"row":25,"column":10},"action":"insert","lines":["."],"id":310},{"start":{"row":25,"column":10},"end":{"row":25,"column":11},"action":"insert","lines":["i"]},{"start":{"row":25,"column":11},"end":{"row":25,"column":12},"action":"insert","lines":["n"]},{"start":{"row":25,"column":12},"end":{"row":25,"column":13},"action":"insert","lines":["s"]},{"start":{"row":25,"column":13},"end":{"row":25,"column":14},"action":"insert","lines":["e"]},{"start":{"row":25,"column":14},"end":{"row":25,"column":15},"action":"insert","lines":["r"]},{"start":{"row":25,"column":15},"end":{"row":25,"column":16},"action":"insert","lines":["t"]}],[{"start":{"row":25,"column":16},"end":{"row":25,"column":17},"action":"insert","lines":["_"],"id":311},{"start":{"row":25,"column":17},"end":{"row":25,"column":18},"action":"insert","lines":["o"]},{"start":{"row":25,"column":18},"end":{"row":25,"column":19},"action":"insert","lines":["n"]}],[{"start":{"row":25,"column":19},"end":{"row":25,"column":20},"action":"insert","lines":["e"],"id":312}],[{"start":{"row":25,"column":20},"end":{"row":25,"column":22},"action":"insert","lines":["()"],"id":313}],[{"start":{"row":25,"column":22},"end":{"row":26,"column":0},"action":"insert","lines":["",""],"id":314},{"start":{"row":26,"column":0},"end":{"row":26,"column":4},"action":"insert","lines":["    "]},{"start":{"row":26,"column":4},"end":{"row":27,"column":0},"action":"insert","lines":["",""]},{"start":{"row":27,"column":0},"end":{"row":27,"column":4},"action":"insert","lines":["    "]},{"start":{"row":27,"column":4},"end":{"row":28,"column":0},"action":"insert","lines":["",""]},{"start":{"row":28,"column":0},"end":{"row":28,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":25,"column":21},"end":{"row":25,"column":22},"action":"insert","lines":["r"],"id":315},{"start":{"row":25,"column":22},"end":{"row":25,"column":23},"action":"insert","lines":["e"]},{"start":{"row":25,"column":23},"end":{"row":25,"column":24},"action":"insert","lines":["q"]},{"start":{"row":25,"column":24},"end":{"row":25,"column":25},"action":"insert","lines":["u"]},{"start":{"row":25,"column":25},"end":{"row":25,"column":26},"action":"insert","lines":["e"]},{"start":{"row":25,"column":26},"end":{"row":25,"column":27},"action":"insert","lines":["s"]},{"start":{"row":25,"column":27},"end":{"row":25,"column":28},"action":"insert","lines":["t"]}],[{"start":{"row":25,"column":28},"end":{"row":25,"column":29},"action":"insert","lines":["."],"id":316},{"start":{"row":25,"column":29},"end":{"row":25,"column":30},"action":"insert","lines":["f"]},{"start":{"row":25,"column":30},"end":{"row":25,"column":31},"action":"insert","lines":["o"]},{"start":{"row":25,"column":31},"end":{"row":25,"column":32},"action":"insert","lines":["r"]}],[{"start":{"row":25,"column":32},"end":{"row":25,"column":33},"action":"insert","lines":["m"],"id":317}],[{"start":{"row":25,"column":33},"end":{"row":25,"column":34},"action":"insert","lines":[" "],"id":318}],[{"start":{"row":25,"column":33},"end":{"row":25,"column":34},"action":"remove","lines":[" "],"id":319}],[{"start":{"row":25,"column":33},"end":{"row":25,"column":34},"action":"insert","lines":["."],"id":320}],[{"start":{"row":25,"column":35},"end":{"row":25,"column":36},"action":"insert","lines":["t"],"id":321},{"start":{"row":25,"column":36},"end":{"row":25,"column":37},"action":"insert","lines":["o"]},{"start":{"row":25,"column":37},"end":{"row":25,"column":38},"action":"insert","lines":["_"]}],[{"start":{"row":25,"column":38},"end":{"row":25,"column":39},"action":"insert","lines":["d"],"id":322},{"start":{"row":25,"column":39},"end":{"row":25,"column":40},"action":"insert","lines":["i"]},{"start":{"row":25,"column":40},"end":{"row":25,"column":41},"action":"insert","lines":["c"]},{"start":{"row":25,"column":41},"end":{"row":25,"column":42},"action":"insert","lines":["t"]}],[{"start":{"row":25,"column":42},"end":{"row":25,"column":44},"action":"insert","lines":["()"],"id":323}],[{"start":{"row":25,"column":44},"end":{"row":25,"column":45},"action":"insert","lines":[")"],"id":324}],[{"start":{"row":25,"column":34},"end":{"row":25,"column":35},"action":"remove","lines":[")"],"id":325}],[{"start":{"row":25,"column":44},"end":{"row":26,"column":0},"action":"insert","lines":["",""],"id":326},{"start":{"row":26,"column":0},"end":{"row":26,"column":4},"action":"insert","lines":["    "]},{"start":{"row":26,"column":4},"end":{"row":26,"column":5},"action":"insert","lines":["r"]},{"start":{"row":26,"column":5},"end":{"row":26,"column":6},"action":"insert","lines":["e"]},{"start":{"row":26,"column":6},"end":{"row":26,"column":7},"action":"insert","lines":["t"]},{"start":{"row":26,"column":7},"end":{"row":26,"column":8},"action":"insert","lines":["u"]},{"start":{"row":26,"column":8},"end":{"row":26,"column":9},"action":"insert","lines":["r"]},{"start":{"row":26,"column":9},"end":{"row":26,"column":10},"action":"insert","lines":["n"]}],[{"start":{"row":26,"column":10},"end":{"row":26,"column":11},"action":"insert","lines":[" "],"id":327},{"start":{"row":26,"column":11},"end":{"row":26,"column":12},"action":"insert","lines":["r"]},{"start":{"row":26,"column":12},"end":{"row":26,"column":13},"action":"insert","lines":["e"]},{"start":{"row":26,"column":13},"end":{"row":26,"column":14},"action":"insert","lines":["d"]},{"start":{"row":26,"column":14},"end":{"row":26,"column":15},"action":"insert","lines":["i"]},{"start":{"row":26,"column":15},"end":{"row":26,"column":16},"action":"insert","lines":["r"]},{"start":{"row":26,"column":16},"end":{"row":26,"column":17},"action":"insert","lines":["e"]},{"start":{"row":26,"column":17},"end":{"row":26,"column":18},"action":"insert","lines":["c"]},{"start":{"row":26,"column":18},"end":{"row":26,"column":19},"action":"insert","lines":["t"]}],[{"start":{"row":26,"column":19},"end":{"row":26,"column":21},"action":"insert","lines":["()"],"id":328}],[{"start":{"row":26,"column":20},"end":{"row":26,"column":21},"action":"insert","lines":["u"],"id":329},{"start":{"row":26,"column":21},"end":{"row":26,"column":22},"action":"insert","lines":["r"]},{"start":{"row":26,"column":22},"end":{"row":26,"column":23},"action":"insert","lines":["l"]}],[{"start":{"row":26,"column":23},"end":{"row":26,"column":24},"action":"insert","lines":["_"],"id":330},{"start":{"row":26,"column":24},"end":{"row":26,"column":25},"action":"insert","lines":["f"]},{"start":{"row":26,"column":25},"end":{"row":26,"column":26},"action":"insert","lines":["o"]},{"start":{"row":26,"column":26},"end":{"row":26,"column":27},"action":"insert","lines":["r"]}],[{"start":{"row":26,"column":27},"end":{"row":26,"column":29},"action":"insert","lines":["()"],"id":331}],[{"start":{"row":26,"column":28},"end":{"row":26,"column":30},"action":"insert","lines":["''"],"id":332}],[{"start":{"row":26,"column":29},"end":{"row":26,"column":30},"action":"insert","lines":["G"],"id":333},{"start":{"row":26,"column":30},"end":{"row":26,"column":31},"action":"insert","lines":["E"]},{"start":{"row":26,"column":31},"end":{"row":26,"column":32},"action":"insert","lines":["T"]}],[{"start":{"row":26,"column":31},"end":{"row":26,"column":32},"action":"remove","lines":["T"],"id":334},{"start":{"row":26,"column":30},"end":{"row":26,"column":31},"action":"remove","lines":["E"]},{"start":{"row":26,"column":29},"end":{"row":26,"column":30},"action":"remove","lines":["G"]}],[{"start":{"row":26,"column":29},"end":{"row":26,"column":30},"action":"insert","lines":["g"],"id":335},{"start":{"row":26,"column":30},"end":{"row":26,"column":31},"action":"insert","lines":["e"]},{"start":{"row":26,"column":31},"end":{"row":26,"column":32},"action":"insert","lines":["t"]},{"start":{"row":26,"column":32},"end":{"row":26,"column":33},"action":"insert","lines":["_"]}],[{"start":{"row":26,"column":33},"end":{"row":26,"column":34},"action":"insert","lines":["t"],"id":336},{"start":{"row":26,"column":34},"end":{"row":26,"column":35},"action":"insert","lines":["s"]},{"start":{"row":26,"column":35},"end":{"row":26,"column":36},"action":"insert","lines":["k"]},{"start":{"row":26,"column":36},"end":{"row":26,"column":37},"action":"insert","lines":["s"]}],[{"start":{"row":26,"column":36},"end":{"row":26,"column":37},"action":"remove","lines":["s"],"id":337},{"start":{"row":26,"column":35},"end":{"row":26,"column":36},"action":"remove","lines":["k"]},{"start":{"row":26,"column":34},"end":{"row":26,"column":35},"action":"remove","lines":["s"]}],[{"start":{"row":26,"column":34},"end":{"row":26,"column":35},"action":"insert","lines":["a"],"id":338},{"start":{"row":26,"column":35},"end":{"row":26,"column":36},"action":"insert","lines":["s"]},{"start":{"row":26,"column":36},"end":{"row":26,"column":37},"action":"insert","lines":["l"]},{"start":{"row":26,"column":37},"end":{"row":26,"column":38},"action":"insert","lines":["s"]}],[{"start":{"row":26,"column":37},"end":{"row":26,"column":38},"action":"remove","lines":["s"],"id":339},{"start":{"row":26,"column":36},"end":{"row":26,"column":37},"action":"remove","lines":["l"]}],[{"start":{"row":26,"column":36},"end":{"row":26,"column":37},"action":"insert","lines":["k"],"id":340},{"start":{"row":26,"column":37},"end":{"row":26,"column":38},"action":"insert","lines":["s"]}],[{"start":{"row":29,"column":0},"end":{"row":29,"column":1},"action":"insert","lines":["@"],"id":341},{"start":{"row":29,"column":1},"end":{"row":29,"column":2},"action":"insert","lines":["a"]},{"start":{"row":29,"column":2},"end":{"row":29,"column":3},"action":"insert","lines":["p"]},{"start":{"row":29,"column":3},"end":{"row":29,"column":4},"action":"insert","lines":["p"]}],[{"start":{"row":29,"column":4},"end":{"row":29,"column":5},"action":"insert","lines":["."],"id":342},{"start":{"row":29,"column":5},"end":{"row":29,"column":6},"action":"insert","lines":["r"]},{"start":{"row":29,"column":6},"end":{"row":29,"column":7},"action":"insert","lines":["o"]},{"start":{"row":29,"column":7},"end":{"row":29,"column":8},"action":"insert","lines":["u"]},{"start":{"row":29,"column":8},"end":{"row":29,"column":9},"action":"insert","lines":["t"]},{"start":{"row":29,"column":9},"end":{"row":29,"column":10},"action":"insert","lines":["e"]}],[{"start":{"row":29,"column":10},"end":{"row":29,"column":12},"action":"insert","lines":["()"],"id":343}],[{"start":{"row":29,"column":11},"end":{"row":29,"column":13},"action":"insert","lines":["''"],"id":344}],[{"start":{"row":29,"column":12},"end":{"row":29,"column":13},"action":"insert","lines":["/"],"id":345},{"start":{"row":29,"column":13},"end":{"row":29,"column":14},"action":"insert","lines":["e"]},{"start":{"row":29,"column":14},"end":{"row":29,"column":15},"action":"insert","lines":["d"]},{"start":{"row":29,"column":15},"end":{"row":29,"column":16},"action":"insert","lines":["i"]},{"start":{"row":29,"column":16},"end":{"row":29,"column":17},"action":"insert","lines":["t"]}],[{"start":{"row":29,"column":17},"end":{"row":29,"column":18},"action":"insert","lines":["_"],"id":346},{"start":{"row":29,"column":18},"end":{"row":29,"column":19},"action":"insert","lines":["t"]},{"start":{"row":29,"column":19},"end":{"row":29,"column":20},"action":"insert","lines":["a"]},{"start":{"row":29,"column":20},"end":{"row":29,"column":21},"action":"insert","lines":["s"]},{"start":{"row":29,"column":21},"end":{"row":29,"column":22},"action":"insert","lines":["k"]}],[{"start":{"row":29,"column":22},"end":{"row":29,"column":23},"action":"insert","lines":["/"],"id":347},{"start":{"row":29,"column":23},"end":{"row":29,"column":24},"action":"insert","lines":["<"]},{"start":{"row":29,"column":24},"end":{"row":29,"column":25},"action":"insert","lines":["t"]}],[{"start":{"row":29,"column":25},"end":{"row":29,"column":26},"action":"insert","lines":["a"],"id":348},{"start":{"row":29,"column":26},"end":{"row":29,"column":27},"action":"insert","lines":["s"]},{"start":{"row":29,"column":27},"end":{"row":29,"column":28},"action":"insert","lines":["k"]},{"start":{"row":29,"column":28},"end":{"row":29,"column":29},"action":"insert","lines":["_"]},{"start":{"row":29,"column":29},"end":{"row":29,"column":30},"action":"insert","lines":["i"]},{"start":{"row":29,"column":30},"end":{"row":29,"column":31},"action":"insert","lines":["d"]}],[{"start":{"row":29,"column":31},"end":{"row":29,"column":32},"action":"insert","lines":[">"],"id":349}],[{"start":{"row":30,"column":1},"end":{"row":30,"column":2},"action":"insert","lines":["d"],"id":350},{"start":{"row":30,"column":2},"end":{"row":30,"column":3},"action":"insert","lines":["e"]},{"start":{"row":30,"column":3},"end":{"row":30,"column":4},"action":"insert","lines":["f"]}],[{"start":{"row":30,"column":4},"end":{"row":30,"column":5},"action":"insert","lines":[" "],"id":351},{"start":{"row":30,"column":5},"end":{"row":30,"column":6},"action":"insert","lines":["e"]},{"start":{"row":30,"column":6},"end":{"row":30,"column":7},"action":"insert","lines":["i"]},{"start":{"row":30,"column":7},"end":{"row":30,"column":8},"action":"insert","lines":["t"]}],[{"start":{"row":30,"column":8},"end":{"row":30,"column":9},"action":"insert","lines":["_"],"id":352},{"start":{"row":30,"column":9},"end":{"row":30,"column":10},"action":"insert","lines":["t"]},{"start":{"row":30,"column":10},"end":{"row":30,"column":11},"action":"insert","lines":["a"]},{"start":{"row":30,"column":11},"end":{"row":30,"column":12},"action":"insert","lines":["s"]},{"start":{"row":30,"column":12},"end":{"row":30,"column":13},"action":"insert","lines":["k"]}],[{"start":{"row":30,"column":13},"end":{"row":30,"column":15},"action":"insert","lines":["()"],"id":353}],[{"start":{"row":30,"column":14},"end":{"row":30,"column":15},"action":"insert","lines":["t"],"id":354},{"start":{"row":30,"column":15},"end":{"row":30,"column":16},"action":"insert","lines":["a"]},{"start":{"row":30,"column":16},"end":{"row":30,"column":17},"action":"insert","lines":["s"]},{"start":{"row":30,"column":17},"end":{"row":30,"column":18},"action":"insert","lines":["k"]}],[{"start":{"row":30,"column":14},"end":{"row":30,"column":18},"action":"remove","lines":["task"],"id":355},{"start":{"row":30,"column":14},"end":{"row":30,"column":21},"action":"insert","lines":["task_id"]}],[{"start":{"row":30,"column":22},"end":{"row":30,"column":23},"action":"insert","lines":[":"],"id":356}],[{"start":{"row":30,"column":23},"end":{"row":30,"column":26},"action":"remove","lines":["   "],"id":357},{"start":{"row":30,"column":23},"end":{"row":31,"column":0},"action":"insert","lines":["",""]},{"start":{"row":31,"column":0},"end":{"row":31,"column":5},"action":"insert","lines":["     "]}],[{"start":{"row":3,"column":35},"end":{"row":4,"column":0},"action":"insert","lines":["",""],"id":358},{"start":{"row":4,"column":0},"end":{"row":4,"column":1},"action":"insert","lines":["f"]},{"start":{"row":4,"column":1},"end":{"row":4,"column":2},"action":"insert","lines":["r"]},{"start":{"row":4,"column":2},"end":{"row":4,"column":3},"action":"insert","lines":["o"]},{"start":{"row":4,"column":3},"end":{"row":4,"column":4},"action":"insert","lines":["m"]}],[{"start":{"row":4,"column":4},"end":{"row":4,"column":5},"action":"insert","lines":[" "],"id":359}],[{"start":{"row":4,"column":4},"end":{"row":4,"column":5},"action":"remove","lines":[" "],"id":360},{"start":{"row":4,"column":3},"end":{"row":4,"column":4},"action":"remove","lines":["m"]},{"start":{"row":4,"column":2},"end":{"row":4,"column":3},"action":"remove","lines":["o"]},{"start":{"row":4,"column":1},"end":{"row":4,"column":2},"action":"remove","lines":["r"]},{"start":{"row":4,"column":0},"end":{"row":4,"column":1},"action":"remove","lines":["f"]}],[{"start":{"row":31,"column":23},"end":{"row":32,"column":0},"action":"insert","lines":["",""],"id":361},{"start":{"row":32,"column":0},"end":{"row":32,"column":5},"action":"insert","lines":["     "]},{"start":{"row":32,"column":5},"end":{"row":32,"column":6},"action":"insert","lines":["h"]},{"start":{"row":32,"column":6},"end":{"row":32,"column":7},"action":"insert","lines":["t"]},{"start":{"row":32,"column":7},"end":{"row":32,"column":8},"action":"insert","lines":["e"]}],[{"start":{"row":32,"column":8},"end":{"row":32,"column":9},"action":"insert","lines":["_"],"id":362},{"start":{"row":32,"column":9},"end":{"row":32,"column":10},"action":"insert","lines":["t"]},{"start":{"row":32,"column":10},"end":{"row":32,"column":11},"action":"insert","lines":["a"]},{"start":{"row":32,"column":11},"end":{"row":32,"column":12},"action":"insert","lines":["s"]},{"start":{"row":32,"column":12},"end":{"row":32,"column":13},"action":"insert","lines":["k"]}],[{"start":{"row":32,"column":13},"end":{"row":32,"column":14},"action":"insert","lines":[" "],"id":363},{"start":{"row":32,"column":14},"end":{"row":32,"column":15},"action":"insert","lines":["="]}],[{"start":{"row":32,"column":15},"end":{"row":32,"column":16},"action":"insert","lines":[" "],"id":364}],[{"start":{"row":32,"column":6},"end":{"row":32,"column":7},"action":"remove","lines":["t"],"id":365},{"start":{"row":32,"column":5},"end":{"row":32,"column":6},"action":"remove","lines":["h"]}],[{"start":{"row":32,"column":5},"end":{"row":32,"column":6},"action":"insert","lines":["t"],"id":366},{"start":{"row":32,"column":6},"end":{"row":32,"column":7},"action":"insert","lines":["h"]}],[{"start":{"row":32,"column":16},"end":{"row":32,"column":17},"action":"insert","lines":["m"],"id":367},{"start":{"row":32,"column":17},"end":{"row":32,"column":18},"action":"insert","lines":["o"]},{"start":{"row":32,"column":18},"end":{"row":32,"column":19},"action":"insert","lines":["n"]},{"start":{"row":32,"column":19},"end":{"row":32,"column":20},"action":"insert","lines":["g"]},{"start":{"row":32,"column":20},"end":{"row":32,"column":21},"action":"insert","lines":["o"]}],[{"start":{"row":32,"column":21},"end":{"row":32,"column":22},"action":"insert","lines":["."],"id":368},{"start":{"row":32,"column":22},"end":{"row":32,"column":23},"action":"insert","lines":["d"]},{"start":{"row":32,"column":23},"end":{"row":32,"column":24},"action":"insert","lines":["b"]}],[{"start":{"row":32,"column":21},"end":{"row":32,"column":22},"action":"remove","lines":["."],"id":369}],[{"start":{"row":32,"column":21},"end":{"row":32,"column":22},"action":"insert","lines":[","],"id":370}],[{"start":{"row":32,"column":24},"end":{"row":32,"column":25},"action":"insert","lines":["."],"id":371},{"start":{"row":32,"column":25},"end":{"row":32,"column":26},"action":"insert","lines":["t"]},{"start":{"row":32,"column":26},"end":{"row":32,"column":27},"action":"insert","lines":["a"]},{"start":{"row":32,"column":27},"end":{"row":32,"column":28},"action":"insert","lines":["s"]},{"start":{"row":32,"column":28},"end":{"row":32,"column":29},"action":"insert","lines":["k"]},{"start":{"row":32,"column":29},"end":{"row":32,"column":30},"action":"insert","lines":["s"]}],[{"start":{"row":0,"column":0},"end":{"row":40,"column":23},"action":"remove","lines":["import os","from flask import Flask, render_template, redirect, request, url_for","from flask_pymongo import PyMongo","from bson.objectid import ObjectId ","","","app = Flask(__name__)","app.config[\"MONGO_DBNAME\"] = 'task_manager'","app.config[\"MONGO_URI\"] = 'mongodb+srv://root:r00tUser@myfirstcluster-aogax.mongodb.net/task_manager?retryWrites=true&w=majority'","","mongo = PyMongo(app)","","","@app.route('/')","@app.route('/get_tasks')","def get_tasks():","    return render_template(\"tasks.html\", tasks=mongo.db.tasks.find())","","@app.route('/add_task')","def add_task():","    return render_template('addtask.html', categories-mango.db.categories.find())","","","@app.route('/insert_task', methods = ['POST'])","def insert_task():","    tasks = mongo.db.tasks","    tasks.insert_one(request.form.to_dict())","    return redirect(url_for('get_tasks'))","    ","    ","@app.route('/edit_task/<task_id>')    "," def eit_task(task_id):","     the_task = mongo,db.tasks","     ","    ","    ","","if __name__ == '__main__':","    app.run(host=os.environ.get('IP'),","            port=int(os.environ.get('PORT')),","            debug=True)"],"id":372}],[{"start":{"row":0,"column":0},"end":{"row":42,"column":19},"action":"insert","lines":["import os","from flask import Flask, render_template, redirect, request, url_for","from flask_pymongo import PyMongo","from bson.objectid import ObjectId","","","app = Flask(__name__)","app.config[\"MONGO_DBNAME\"] = 'task_manager'","app.config[\"MONGO_URI\"] = os.getenv('MONGO_URI', 'mongodb://localhost')","","mongo = PyMongo(app)","","@app.route('/')","@app.route('/get_tasks')","def get_tasks():","    return render_template(\"tasks.html\", ","                           tasks=mongo.db.tasks.find())","","","@app.route('/add_task')","def add_task():","    return render_template('addtask.html',","                           categories=mongo.db.categories.find())","","","@app.route('/insert_task', methods=['POST'])","def insert_task():","    tasks =  mongo.db.tasks","    tasks.insert_one(request.form.to_dict())","    return redirect(url_for('get_tasks'))","","@app.route('/edit_task/<task_id>')","def edit_task(task_id):","    the_task =  mongo.db.tasks.find_one({\"_id\": ObjectId(task_id)})","    all_categories =  mongo.db.categories.find()","    return render_template('edittask.html', task=the_task,","                           categories=all_categories)","","","if __name__ == '__main__':","    app.run(host=os.environ.get('IP'),","        port=int(os.environ.get('PORT')),","        debug=True)"],"id":373}],[{"start":{"row":0,"column":0},"end":{"row":42,"column":19},"action":"remove","lines":["import os","from flask import Flask, render_template, redirect, request, url_for","from flask_pymongo import PyMongo","from bson.objectid import ObjectId","","","app = Flask(__name__)","app.config[\"MONGO_DBNAME\"] = 'task_manager'","app.config[\"MONGO_URI\"] = os.getenv('MONGO_URI', 'mongodb://localhost')","","mongo = PyMongo(app)","","@app.route('/')","@app.route('/get_tasks')","def get_tasks():","    return render_template(\"tasks.html\", ","                           tasks=mongo.db.tasks.find())","","","@app.route('/add_task')","def add_task():","    return render_template('addtask.html',","                           categories=mongo.db.categories.find())","","","@app.route('/insert_task', methods=['POST'])","def insert_task():","    tasks =  mongo.db.tasks","    tasks.insert_one(request.form.to_dict())","    return redirect(url_for('get_tasks'))","","@app.route('/edit_task/<task_id>')","def edit_task(task_id):","    the_task =  mongo.db.tasks.find_one({\"_id\": ObjectId(task_id)})","    all_categories =  mongo.db.categories.find()","    return render_template('edittask.html', task=the_task,","                           categories=all_categories)","","","if __name__ == '__main__':","    app.run(host=os.environ.get('IP'),","        port=int(os.environ.get('PORT')),","        debug=True)"],"id":374}],[{"start":{"row":0,"column":0},"end":{"row":43,"column":23},"action":"insert","lines":["import os","from flask import Flask, render_template, redirect, request, url_for","from flask_pymongo import PyMongo","from bson.objectid import ObjectId","","","app = Flask(__name__)","app.config[\"MONGO_DBNAME\"] = 'task_manager'","app.config[\"MONGO_URI\"] = os.getenv('MONGO_URI', 'mongodb://localhost')","","mongo = PyMongo(app)","","@app.route('/')","@app.route('/get_tasks')","def get_tasks():","    return render_template(\"tasks.html\", ","                           tasks=mongo.db.tasks.find())","","","@app.route('/add_task')","def add_task():","    return render_template('addtask.html',","                           categories=mongo.db.categories.find())","","","@app.route('/insert_task', methods=['POST'])","def insert_task():","    tasks =  mongo.db.tasks","    tasks.insert_one(request.form.to_dict())","    return redirect(url_for('get_tasks'))","","","@app.route('/edit_task/<task_id>')","def edit_task(task_id):","    the_task =  mongo.db.tasks.find_one({\"_id\": ObjectId(task_id)})","    all_categories =  mongo.db.categories.find()","    return render_template('edittask.html', task=the_task,","                           categories=all_categories)","","","if __name__ == '__main__':","    app.run(host=os.environ.get('IP'),","            port=int(os.environ.get('PORT')),","            debug=True)"],"id":375}],[{"start":{"row":0,"column":0},"end":{"row":43,"column":23},"action":"remove","lines":["import os","from flask import Flask, render_template, redirect, request, url_for","from flask_pymongo import PyMongo","from bson.objectid import ObjectId","","","app = Flask(__name__)","app.config[\"MONGO_DBNAME\"] = 'task_manager'","app.config[\"MONGO_URI\"] = os.getenv('MONGO_URI', 'mongodb://localhost')","","mongo = PyMongo(app)","","@app.route('/')","@app.route('/get_tasks')","def get_tasks():","    return render_template(\"tasks.html\", ","                           tasks=mongo.db.tasks.find())","","","@app.route('/add_task')","def add_task():","    return render_template('addtask.html',","                           categories=mongo.db.categories.find())","","","@app.route('/insert_task', methods=['POST'])","def insert_task():","    tasks =  mongo.db.tasks","    tasks.insert_one(request.form.to_dict())","    return redirect(url_for('get_tasks'))","","","@app.route('/edit_task/<task_id>')","def edit_task(task_id):","    the_task =  mongo.db.tasks.find_one({\"_id\": ObjectId(task_id)})","    all_categories =  mongo.db.categories.find()","    return render_template('edittask.html', task=the_task,","                           categories=all_categories)","","","if __name__ == '__main__':","    app.run(host=os.environ.get('IP'),","            port=int(os.environ.get('PORT')),","            debug=True)"],"id":376}],[{"start":{"row":0,"column":0},"end":{"row":57,"column":23},"action":"insert","lines":["import os","from flask import Flask, render_template, redirect, request, url_for","from flask_pymongo import PyMongo","from bson.objectid import ObjectId","","","app = Flask(__name__)","app.config[\"MONGO_DBNAME\"] = 'task_manager'","app.config[\"MONGO_URI\"] = os.getenv('MONGO_URI', 'mongodb://localhost')","","mongo = PyMongo(app)","","@app.route('/')","@app.route('/get_tasks')","def get_tasks():","    return render_template(\"tasks.html\", ","                           tasks=mongo.db.tasks.find())","","","@app.route('/add_task')","def add_task():","    return render_template('addtask.html',","                           categories=mongo.db.categories.find())","","","@app.route('/insert_task', methods=['POST'])","def insert_task():","    tasks =  mongo.db.tasks","    tasks.insert_one(request.form.to_dict())","    return redirect(url_for('get_tasks'))","","","@app.route('/edit_task/<task_id>')","def edit_task(task_id):","    the_task =  mongo.db.tasks.find_one({\"_id\": ObjectId(task_id)})","    all_categories =  mongo.db.categories.find()","    return render_template('edittask.html', task=the_task,","                           categories=all_categories)","","","@app.route('/update_task/<task_id>', methods=[\"POST\"])","def update_task(task_id):","    tasks = mongo.db.tasks","    tasks.update( {'_id': ObjectId(task_id)},","    {","        'task_name':request.form.get('task_name'),","        'category_name':request.form.get('category_name'),","        'task_description': request.form.get('task_description'),","        'due_date': request.form.get('due_date'),","        'is_urgent':request.form.get('is_urgent')","    })","    return redirect(url_for('get_tasks'))","","","if __name__ == '__main__':","    app.run(host=os.environ.get('IP'),","            port=int(os.environ.get('PORT')),","            debug=True)"],"id":377}],[{"start":{"row":0,"column":0},"end":{"row":57,"column":23},"action":"remove","lines":["import os","from flask import Flask, render_template, redirect, request, url_for","from flask_pymongo import PyMongo","from bson.objectid import ObjectId","","","app = Flask(__name__)","app.config[\"MONGO_DBNAME\"] = 'task_manager'","app.config[\"MONGO_URI\"] = os.getenv('MONGO_URI', 'mongodb://localhost')","","mongo = PyMongo(app)","","@app.route('/')","@app.route('/get_tasks')","def get_tasks():","    return render_template(\"tasks.html\", ","                           tasks=mongo.db.tasks.find())","","","@app.route('/add_task')","def add_task():","    return render_template('addtask.html',","                           categories=mongo.db.categories.find())","","","@app.route('/insert_task', methods=['POST'])","def insert_task():","    tasks =  mongo.db.tasks","    tasks.insert_one(request.form.to_dict())","    return redirect(url_for('get_tasks'))","","","@app.route('/edit_task/<task_id>')","def edit_task(task_id):","    the_task =  mongo.db.tasks.find_one({\"_id\": ObjectId(task_id)})","    all_categories =  mongo.db.categories.find()","    return render_template('edittask.html', task=the_task,","                           categories=all_categories)","","","@app.route('/update_task/<task_id>', methods=[\"POST\"])","def update_task(task_id):","    tasks = mongo.db.tasks","    tasks.update( {'_id': ObjectId(task_id)},","    {","        'task_name':request.form.get('task_name'),","        'category_name':request.form.get('category_name'),","        'task_description': request.form.get('task_description'),","        'due_date': request.form.get('due_date'),","        'is_urgent':request.form.get('is_urgent')","    })","    return redirect(url_for('get_tasks'))","","","if __name__ == '__main__':","    app.run(host=os.environ.get('IP'),","            port=int(os.environ.get('PORT')),","            debug=True)"],"id":378},{"start":{"row":0,"column":0},"end":{"row":63,"column":23},"action":"insert","lines":["import os","from flask import Flask, render_template, redirect, request, url_for","from flask_pymongo import PyMongo","from bson.objectid import ObjectId","","","app = Flask(__name__)","app.config[\"MONGO_DBNAME\"] = 'task_manager'","app.config[\"MONGO_URI\"] = os.getenv('MONGO_URI', 'mongodb://localhost')","","mongo = PyMongo(app)","","@app.route('/')","@app.route('/get_tasks')","def get_tasks():","    return render_template(\"tasks.html\", ","                           tasks=mongo.db.tasks.find())","","","@app.route('/add_task')","def add_task():","    return render_template('addtask.html',","                           categories=mongo.db.categories.find())","","","@app.route('/insert_task', methods=['POST'])","def insert_task():","    tasks =  mongo.db.tasks","    tasks.insert_one(request.form.to_dict())","    return redirect(url_for('get_tasks'))","","","@app.route('/edit_task/<task_id>')","def edit_task(task_id):","    the_task =  mongo.db.tasks.find_one({\"_id\": ObjectId(task_id)})","    all_categories =  mongo.db.categories.find()","    return render_template('edittask.html', task=the_task,","                           categories=all_categories)","","","@app.route('/update_task/<task_id>', methods=[\"POST\"])","def update_task(task_id):","    tasks = mongo.db.tasks","    tasks.update( {'_id': ObjectId(task_id)},","    {","        'task_name':request.form.get('task_name'),","        'category_name':request.form.get('category_name'),","        'task_description': request.form.get('task_description'),","        'due_date': request.form.get('due_date'),","        'is_urgent':request.form.get('is_urgent')","    })","    return redirect(url_for('get_tasks'))","","","@app.route('/delete_task/<task_id>')","def delete_task(task_id):","    mongo.db.tasks.remove({'_id': ObjectId(task_id)})","    return redirect(url_for('get_tasks'))","","","if __name__ == '__main__':","    app.run(host=os.environ.get('IP'),","            port=int(os.environ.get('PORT')),","            debug=True)"]}],[{"start":{"row":0,"column":0},"end":{"row":63,"column":23},"action":"remove","lines":["import os","from flask import Flask, render_template, redirect, request, url_for","from flask_pymongo import PyMongo","from bson.objectid import ObjectId","","","app = Flask(__name__)","app.config[\"MONGO_DBNAME\"] = 'task_manager'","app.config[\"MONGO_URI\"] = os.getenv('MONGO_URI', 'mongodb://localhost')","","mongo = PyMongo(app)","","@app.route('/')","@app.route('/get_tasks')","def get_tasks():","    return render_template(\"tasks.html\", ","                           tasks=mongo.db.tasks.find())","","","@app.route('/add_task')","def add_task():","    return render_template('addtask.html',","                           categories=mongo.db.categories.find())","","","@app.route('/insert_task', methods=['POST'])","def insert_task():","    tasks =  mongo.db.tasks","    tasks.insert_one(request.form.to_dict())","    return redirect(url_for('get_tasks'))","","","@app.route('/edit_task/<task_id>')","def edit_task(task_id):","    the_task =  mongo.db.tasks.find_one({\"_id\": ObjectId(task_id)})","    all_categories =  mongo.db.categories.find()","    return render_template('edittask.html', task=the_task,","                           categories=all_categories)","","","@app.route('/update_task/<task_id>', methods=[\"POST\"])","def update_task(task_id):","    tasks = mongo.db.tasks","    tasks.update( {'_id': ObjectId(task_id)},","    {","        'task_name':request.form.get('task_name'),","        'category_name':request.form.get('category_name'),","        'task_description': request.form.get('task_description'),","        'due_date': request.form.get('due_date'),","        'is_urgent':request.form.get('is_urgent')","    })","    return redirect(url_for('get_tasks'))","","","@app.route('/delete_task/<task_id>')","def delete_task(task_id):","    mongo.db.tasks.remove({'_id': ObjectId(task_id)})","    return redirect(url_for('get_tasks'))","","","if __name__ == '__main__':","    app.run(host=os.environ.get('IP'),","            port=int(os.environ.get('PORT')),","            debug=True)"],"id":379}],[{"start":{"row":0,"column":0},"end":{"row":69,"column":19},"action":"insert","lines":["import os","from flask import Flask, render_template, redirect, request, url_for, request","from flask_pymongo import PyMongo","from bson.objectid import ObjectId","","","app = Flask(__name__)","app.config[\"MONGO_DBNAME\"] = 'task_manager'","app.config[\"MONGO_URI\"] = os.getenv('MONGO_URI', 'mongodb://localhost')","","mongo = PyMongo(app)","","@app.route('/')","@app.route('/get_tasks')","def get_tasks():","    return render_template(\"tasks.html\", ","                           tasks=mongo.db.tasks.find())","","","@app.route('/add_task')","def add_task():","    return render_template('addtask.html',","                           categories=mongo.db.categories.find())","","","@app.route('/insert_task', methods=['POST'])","def insert_task():","    tasks =  mongo.db.tasks","    tasks.insert_one(request.form.to_dict())","    return redirect(url_for('get_tasks'))","","","@app.route('/edit_task/<task_id>')","def edit_task(task_id):","    the_task =  mongo.db.tasks.find_one({\"_id\": ObjectId(task_id)})","    all_categories =  mongo.db.categories.find()","    return render_template('edittask.html', task=the_task,","                           categories=all_categories)","","","@app.route('/update_task/<task_id>', methods=[\"POST\"])","def update_task(task_id):","    tasks = mongo.db.tasks","    tasks.update( {'_id': ObjectId(task_id)},","    {","        'task_name':request.form.get('task_name'),","        'category_name':request.form.get('category_name'),","        'task_description': request.form.get('task_description'),","        'due_date': request.form.get('due_date'),","        'is_urgent':request.form.get('is_urgent') ","    })","    return redirect(url_for('get_tasks'))","","","@app.route('/delete_task/<task_id>')","def delete_task(task_id):","    mongo.db.tasks.remove({'_id': ObjectId(task_id)})","    return redirect(url_for('get_tasks'))","","","@app.route('/get_categories')","def get_categories():","    return render_template('categories.html',","                           categories=mongo.db.categories.find())","","","if __name__ == '__main__':","    app.run(host=os.environ.get('IP'),","        port=int(os.environ.get('PORT')),","        debug=True)"],"id":380}],[{"start":{"row":0,"column":0},"end":{"row":69,"column":19},"action":"remove","lines":["import os","from flask import Flask, render_template, redirect, request, url_for, request","from flask_pymongo import PyMongo","from bson.objectid import ObjectId","","","app = Flask(__name__)","app.config[\"MONGO_DBNAME\"] = 'task_manager'","app.config[\"MONGO_URI\"] = os.getenv('MONGO_URI', 'mongodb://localhost')","","mongo = PyMongo(app)","","@app.route('/')","@app.route('/get_tasks')","def get_tasks():","    return render_template(\"tasks.html\", ","                           tasks=mongo.db.tasks.find())","","","@app.route('/add_task')","def add_task():","    return render_template('addtask.html',","                           categories=mongo.db.categories.find())","","","@app.route('/insert_task', methods=['POST'])","def insert_task():","    tasks =  mongo.db.tasks","    tasks.insert_one(request.form.to_dict())","    return redirect(url_for('get_tasks'))","","","@app.route('/edit_task/<task_id>')","def edit_task(task_id):","    the_task =  mongo.db.tasks.find_one({\"_id\": ObjectId(task_id)})","    all_categories =  mongo.db.categories.find()","    return render_template('edittask.html', task=the_task,","                           categories=all_categories)","","","@app.route('/update_task/<task_id>', methods=[\"POST\"])","def update_task(task_id):","    tasks = mongo.db.tasks","    tasks.update( {'_id': ObjectId(task_id)},","    {","        'task_name':request.form.get('task_name'),","        'category_name':request.form.get('category_name'),","        'task_description': request.form.get('task_description'),","        'due_date': request.form.get('due_date'),","        'is_urgent':request.form.get('is_urgent') ","    })","    return redirect(url_for('get_tasks'))","","","@app.route('/delete_task/<task_id>')","def delete_task(task_id):","    mongo.db.tasks.remove({'_id': ObjectId(task_id)})","    return redirect(url_for('get_tasks'))","","","@app.route('/get_categories')","def get_categories():","    return render_template('categories.html',","                           categories=mongo.db.categories.find())","","","if __name__ == '__main__':","    app.run(host=os.environ.get('IP'),","        port=int(os.environ.get('PORT')),","        debug=True)"],"id":381}],[{"start":{"row":0,"column":0},"end":{"row":84,"column":23},"action":"insert","lines":["import os","from flask import Flask, render_template, redirect, request, url_for, request","from flask_pymongo import PyMongo","from bson.objectid import ObjectId","","","app = Flask(__name__)","app.config[\"MONGO_DBNAME\"] = 'task_manager'","app.config[\"MONGO_URI\"] = os.getenv('MONGO_URI', 'mongodb://localhost')","","mongo = PyMongo(app)","","@app.route('/')","@app.route('/get_tasks')","def get_tasks():","    return render_template(\"tasks.html\", ","                           tasks=mongo.db.tasks.find())","","","@app.route('/add_task')","def add_task():","    return render_template('addtask.html',","        categories=mongo.db.categories.find())","","","@app.route('/insert_task', methods=['POST'])","def insert_task():","    tasks =  mongo.db.tasks","    tasks.insert_one(request.form.to_dict())","    return redirect(url_for('get_tasks'))","","","@app.route('/edit_task/<task_id>')","def edit_task(task_id):","    the_task =  mongo.db.tasks.find_one({\"_id\": ObjectId(task_id)})","    all_categories =  mongo.db.categories.find()","    return render_template('edittask.html', task=the_task,","                           categories=all_categories)","","","@app.route('/update_task/<task_id>', methods=[\"POST\"])","def update_task(task_id):","    tasks = mongo.db.tasks","    tasks.update( {'_id': ObjectId(task_id)},","    {","        'task_name':request.form.get('task_name'),","        'category_name':request.form.get('category_name'),","        'task_description': request.form.get('task_description'),","        'due_date': request.form.get('due_date'),","        'is_urgent':request.form.get('is_urgent')","    })","    return redirect(url_for('get_tasks'))","","","@app.route('/delete_task/<task_id>')","def delete_task(task_id):","    mongo.db.tasks.remove({'_id': ObjectId(task_id)})","    return redirect(url_for('get_tasks'))","","","@app.route('/get_categories')","def get_categories():","    return render_template('categories.html',","                           categories=mongo.db.categories.find())","                           ","","@app.route('/edit_category/<category_id>')","def edit_category(category_id):","    return render_template('editcategory.html',","                           category=mongo.db.categories.find_one(","                           {'_id': ObjectId(category_id)}))","","","@app.route('/update_category/<category_id>', methods=['POST'])","def update_category(category_id):","    mongo.db.categories.update(","        {'_id': ObjectId(category_id)},","        {'category_name': request.form.get('category_name')})","    return redirect(url_for('get_categories'))","","","if __name__ == '__main__':","    app.run(host=os.environ.get('IP'),","            port=int(os.environ.get('PORT')),","            debug=True)"],"id":382}],[{"start":{"row":0,"column":0},"end":{"row":84,"column":23},"action":"remove","lines":["import os","from flask import Flask, render_template, redirect, request, url_for, request","from flask_pymongo import PyMongo","from bson.objectid import ObjectId","","","app = Flask(__name__)","app.config[\"MONGO_DBNAME\"] = 'task_manager'","app.config[\"MONGO_URI\"] = os.getenv('MONGO_URI', 'mongodb://localhost')","","mongo = PyMongo(app)","","@app.route('/')","@app.route('/get_tasks')","def get_tasks():","    return render_template(\"tasks.html\", ","                           tasks=mongo.db.tasks.find())","","","@app.route('/add_task')","def add_task():","    return render_template('addtask.html',","        categories=mongo.db.categories.find())","","","@app.route('/insert_task', methods=['POST'])","def insert_task():","    tasks =  mongo.db.tasks","    tasks.insert_one(request.form.to_dict())","    return redirect(url_for('get_tasks'))","","","@app.route('/edit_task/<task_id>')","def edit_task(task_id):","    the_task =  mongo.db.tasks.find_one({\"_id\": ObjectId(task_id)})","    all_categories =  mongo.db.categories.find()","    return render_template('edittask.html', task=the_task,","                           categories=all_categories)","","","@app.route('/update_task/<task_id>', methods=[\"POST\"])","def update_task(task_id):","    tasks = mongo.db.tasks","    tasks.update( {'_id': ObjectId(task_id)},","    {","        'task_name':request.form.get('task_name'),","        'category_name':request.form.get('category_name'),","        'task_description': request.form.get('task_description'),","        'due_date': request.form.get('due_date'),","        'is_urgent':request.form.get('is_urgent')","    })","    return redirect(url_for('get_tasks'))","","","@app.route('/delete_task/<task_id>')","def delete_task(task_id):","    mongo.db.tasks.remove({'_id': ObjectId(task_id)})","    return redirect(url_for('get_tasks'))","","","@app.route('/get_categories')","def get_categories():","    return render_template('categories.html',","                           categories=mongo.db.categories.find())","                           ","","@app.route('/edit_category/<category_id>')","def edit_category(category_id):","    return render_template('editcategory.html',","                           category=mongo.db.categories.find_one(","                           {'_id': ObjectId(category_id)}))","","","@app.route('/update_category/<category_id>', methods=['POST'])","def update_category(category_id):","    mongo.db.categories.update(","        {'_id': ObjectId(category_id)},","        {'category_name': request.form.get('category_name')})","    return redirect(url_for('get_categories'))","","","if __name__ == '__main__':","    app.run(host=os.environ.get('IP'),","            port=int(os.environ.get('PORT')),","            debug=True)"],"id":383},{"start":{"row":0,"column":0},"end":{"row":75,"column":19},"action":"insert","lines":["import os","from flask import Flask, render_template, redirect, request, url_for, request","from flask_pymongo import PyMongo","from bson.objectid import ObjectId","","","app = Flask(__name__)","app.config[\"MONGO_DBNAME\"] = 'task_manager'","app.config[\"MONGO_URI\"] = os.getenv('MONGO_URI', 'mongodb://localhost')","","mongo = PyMongo(app)","","@app.route('/')","@app.route('/get_tasks')","def get_tasks():","    return render_template(\"tasks.html\", ","                           tasks=mongo.db.tasks.find())","","","@app.route('/add_task')","def add_task():","    return render_template('addtask.html',","                           categories=mongo.db.categories.find())","","","@app.route('/insert_task', methods=['POST'])","def insert_task():","    tasks =  mongo.db.tasks","    tasks.insert_one(request.form.to_dict())","    return redirect(url_for('get_tasks'))","","","@app.route('/edit_task/<task_id>')","def edit_task(task_id):","    the_task =  mongo.db.tasks.find_one({\"_id\": ObjectId(task_id)})","    all_categories =  mongo.db.categories.find()","    return render_template('edittask.html', task=the_task,","                           categories=all_categories)","","","@app.route('/update_task/<task_id>', methods=[\"POST\"])","def update_task(task_id):","    tasks = mongo.db.tasks","    tasks.update( {'_id': ObjectId(task_id)},","    {","        'task_name':request.form.get('task_name'),","        'category_name':request.form.get('category_name'),","        'task_description': request.form.get('task_description'),","        'due_date': request.form.get('due_date'),","        'is_urgent':request.form.get('is_urgent')","    })","    return redirect(url_for('get_tasks'))","","","@app.route('/delete_task/<task_id>')","def delete_task(task_id):","    mongo.db.tasks.remove({'_id': ObjectId(task_id)})","    return redirect(url_for('get_tasks'))","","","@app.route('/get_categories')","def get_categories():","    return render_template('categories.html',","                           categories=mongo.db.categories.find())","","","@app.route('/delete_category/<category_id>')","def delete_category(category_id):","    mongo.db.categories.remove({'_id': ObjectId(category_id)})","    return redirect(url_for('get_categories'))","","","if __name__ == '__main__':","    app.run(host=os.environ.get('IP'),","        port=int(os.environ.get('PORT')),","        debug=True)"]}],[{"start":{"row":0,"column":0},"end":{"row":75,"column":19},"action":"remove","lines":["import os","from flask import Flask, render_template, redirect, request, url_for, request","from flask_pymongo import PyMongo","from bson.objectid import ObjectId","","","app = Flask(__name__)","app.config[\"MONGO_DBNAME\"] = 'task_manager'","app.config[\"MONGO_URI\"] = os.getenv('MONGO_URI', 'mongodb://localhost')","","mongo = PyMongo(app)","","@app.route('/')","@app.route('/get_tasks')","def get_tasks():","    return render_template(\"tasks.html\", ","                           tasks=mongo.db.tasks.find())","","","@app.route('/add_task')","def add_task():","    return render_template('addtask.html',","                           categories=mongo.db.categories.find())","","","@app.route('/insert_task', methods=['POST'])","def insert_task():","    tasks =  mongo.db.tasks","    tasks.insert_one(request.form.to_dict())","    return redirect(url_for('get_tasks'))","","","@app.route('/edit_task/<task_id>')","def edit_task(task_id):","    the_task =  mongo.db.tasks.find_one({\"_id\": ObjectId(task_id)})","    all_categories =  mongo.db.categories.find()","    return render_template('edittask.html', task=the_task,","                           categories=all_categories)","","","@app.route('/update_task/<task_id>', methods=[\"POST\"])","def update_task(task_id):","    tasks = mongo.db.tasks","    tasks.update( {'_id': ObjectId(task_id)},","    {","        'task_name':request.form.get('task_name'),","        'category_name':request.form.get('category_name'),","        'task_description': request.form.get('task_description'),","        'due_date': request.form.get('due_date'),","        'is_urgent':request.form.get('is_urgent')","    })","    return redirect(url_for('get_tasks'))","","","@app.route('/delete_task/<task_id>')","def delete_task(task_id):","    mongo.db.tasks.remove({'_id': ObjectId(task_id)})","    return redirect(url_for('get_tasks'))","","","@app.route('/get_categories')","def get_categories():","    return render_template('categories.html',","                           categories=mongo.db.categories.find())","","","@app.route('/delete_category/<category_id>')","def delete_category(category_id):","    mongo.db.categories.remove({'_id': ObjectId(category_id)})","    return redirect(url_for('get_categories'))","","","if __name__ == '__main__':","    app.run(host=os.environ.get('IP'),","        port=int(os.environ.get('PORT')),","        debug=True)"],"id":384}],[{"start":{"row":0,"column":0},"end":{"row":101,"column":23},"action":"insert","lines":["import os","from flask import Flask, render_template, redirect, request, url_for, request","from flask_pymongo import PyMongo","from bson.objectid import ObjectId","","","app = Flask(__name__)","app.config[\"MONGO_DBNAME\"] = 'task_manager'","app.config[\"MONGO_URI\"] = os.getenv('MONGO_URI', 'mongodb://localhost')","","mongo = PyMongo(app)","","@app.route('/')","@app.route('/get_tasks')","def get_tasks():","    return render_template(\"tasks.html\", ","                           tasks=mongo.db.tasks.find())","","","@app.route('/add_task')","def add_task():","    return render_template('addtask.html',","                           categories=mongo.db.categories.find())","","","@app.route('/insert_task', methods=['POST'])","def insert_task():","    tasks =  mongo.db.tasks","    tasks.insert_one(request.form.to_dict())","    return redirect(url_for('get_tasks'))","","","@app.route('/edit_task/<task_id>')","def edit_task(task_id):","    the_task =  mongo.db.tasks.find_one({\"_id\": ObjectId(task_id)})","    all_categories =  mongo.db.categories.find()","    return render_template('edittask.html', task=the_task,","                           categories=all_categories)","","","@app.route('/update_task/<task_id>', methods=[\"POST\"])","def update_task(task_id):","    tasks = mongo.db.tasks","    tasks.update( {'_id': ObjectId(task_id)},","    {","        'task_name':request.form.get('task_name'),","        'category_name':request.form.get('category_name'),","        'task_description': request.form.get('task_description'),","        'due_date': request.form.get('due_date'),","        'is_urgent':request.form.get('is_urgent')","    })","    return redirect(url_for('get_tasks'))","","","@app.route('/delete_task/<task_id>')","def delete_task(task_id):","    mongo.db.tasks.remove({'_id': ObjectId(task_id)})","    return redirect(url_for('get_tasks'))","","","@app.route('/get_categories')","def get_categories():","    return render_template('categories.html',","                           categories=mongo.db.categories.find())","","","@app.route('/delete_category/<category_id>')","def delete_category(category_id):","    mongo.db.categories.remove({'_id': ObjectId(category_id)})","    return redirect(url_for('get_categories'))","","","@app.route('/edit_category/<category_id>')","def edit_category(category_id):","    return render_template('editcategory.html',","    category=mongo.db.categories.find_one({'_id': ObjectId(category_id)}))","","","@app.route('/update_category/<category_id>', methods=['POST'])","def update_category(category_id):","    mongo.db.categories.update(","        {'_id': ObjectId(category_id)},","        {'category_name': request.form.get('category_name')})","    return redirect(url_for('get_categories'))","","","@app.route('/insert_category', methods=['POST'])","def insert_category():","    category_doc = {'category_name': request.form.get('category_name')}","    mongo.db.categories.insert_one(category_doc)","    return redirect(url_for('get_categories'))","","","@app.route('/add_category')","def add_category():","    return render_template('addcategory.html')","","","if __name__ == '__main__':","    app.run(host=os.environ.get('IP'),","            port=int(os.environ.get('PORT')),","            debug=True)"],"id":385}]]},"ace":{"folds":[],"scrolltop":942,"scrollleft":0,"selection":{"start":{"row":101,"column":23},"end":{"row":101,"column":23},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1562002403792}